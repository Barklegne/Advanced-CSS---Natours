/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    line-height: 1.7;
    font-size: 16px;
    color: #777;
    padding: 1.2rem;
}

.header {
    /* Helps to set absolute position to child elements E.g. logo-box */
    position: relative;
    
    height: 95vh;
    
    /* The gradient is Responsible for overlay color above the bg 0.8 is the opacity of the gradient to make sure the main bg is visible 
    top/cover make sure the top won't crop when we resize the picture*/
    background: linear-gradient(
        to right bottom,
        rgba(126,213,11,0.8),
        rgba(40,180,131,0.8)), 
    url('../img/hero.jpg') no-repeat top/cover;
    
    /* Clockwise cutting adage of a polygon 
       For more shapes refer bennettfeely.com/clippy*/
    clip-path: polygon( 0 0, 100% 0, 100% 75% , 0 100%);

    border-radius: 5px;
}

.logo-box {
    /* Exact Positioning */
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    /* For a better visibility, set the height then the width will be specified accordingly  */
    height: 35px;
}

.logo:hover {
    /* Calling animation */
    /* animation: moveInLeft 1s ease-out; */
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    margin-bottom: 3rem;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    /* Calling animation */
    animation-name: moveInLeft;
    
    /* Setting animation duration */
    animation-duration: 5s;
    
    /* Delay before the animation starts */
    /* animation-delay: 3s; */
    /* No of times the animation will repeat */
    animation-iteration-count: 1;
    
    /* Type of animation */
    animation-timing-function: ease-out;

    /* A fix for blurring/shaking animation end */
    backface-visibility: hidden;
    
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700px;
    letter-spacing: 17.4px;

    /* animation-name: moveInRight;
    animation-duration: 5s;
    animation-iteration-count: 1;
    animation-timing-function: ease-out; */

    /* Shorthand animation setting */
    animation: moveInRight 5s ease-out;
}

.text-box { 
    position: absolute;
    
    /* the % is in relation to the parent element */
    top: 40%;
    left: 50%;

    /* For debugging only */
    /* background: skyblue; */
    
    /* To exactly center the box, instead of the relation to the parent element, it will be in relation to it self*/
    transform: translate(-50%,-50%);

    /* Aligns the text box items to the center */
    text-align: center;
    
}

/* Animation detail */
@keyframes moveInLeft{
    0% {
        /* At the start the item will be invisible */
        opacity: 0;
        
        /* X Axis direction */
        transform: translateX(-200px);
    }


    80% {
        /*Changing the X Axis direction */
        /* transform: translateX(50px); */

        /* Text Rotation if needed */
        /* transform: rotate(358deg); */

        /* Another shorthand for both translate and rotation */
        /* transform: translateX(150px) rotate(358deg); */
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* Please refer the above keyframe for documentation */
@keyframes moveInRight{
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom{
    0% {
        opacity: 0;
        
        /* Elements will start Xpx lower than their actual position */
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn:link, .btn:visited {
    /* Makes the button occupy its content in a new line unlike block change inline-block to block to see the result */
    display: inline-block;
    text-transform: uppercase;
    text-decoration: none;
    padding: .8rem 1.5rem;
    border-radius: 2rem;

    /* setting animation [the transformations on hover and active will also be affected by this]*/

    /* Its also the easier way of animation rather than keyframes */
    transition: all .2s;
    
    /* In order to make its child position absolute */
    position: relative;
    
}

.btn:hover {
    /* Transform the button up 3px from the initial state */
    transform: translateY(-3px);
    
    /* Shadows the button with x, y, blur and color with opacity */
    box-shadow: 0px 10px 20px rgba(0,0,0,.2);
}

.btn:active {
    /* Transform the button up 1px form the initial state */
    transform: translateY(-1px);

     /* Shadows the button with x, y, blur and color with opacity */
    box-shadow: 0px 5px 10px rgba(0,0,0,.2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

/* Pseudo element */
.btn::after {
    /* in order to display a content must be there */
    content: "";

    /* the display style must be the same as its parent (the button) */
    display: inline-block;

    /* The width,the height, and the border radius also must be the same as its parent (the button) */
    width: 100%;
    height: 100%;
    border-radius: 2rem;

    /* To hide the virtual button underneath the actual button */
    position: absolute;
    top: 0;
    left: 0;

    /* Send it back to its parent (The actual button) */
    z-index: -1;

    transition: all .4s;
}

/* The virtual button should also be the same color as its parent element */
.btn-white::after {
    background-color: #fff;
}

.btn:hover::after {
    /* on hover the virtual item gets scaled in both direction */
    transform: scaleX(1.2) scaleY(1.4);
    opacity: 0;
}

.btn-animated {
    /* Calls the animation  with [ animation name, animation time, animation type, animation detail ]*/
    animation: moveInBottom .5s ease-out .75s;

    /* the 0% style of `movieInBottom` will be applied 1st
    This will start the button at a hidden state */
    animation-fill-mode: backwards;
}